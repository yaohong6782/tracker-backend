openapi: 3.0.0
info:
  version: 1.0.0
  title: Tracking API
  description: Track my note
#
servers:
  - url: '{protocol}://localhost:{port}/api'
    variables:
      protocol:
        enum:
          - http
          - https
        default: http
      port:
        enum:
          - '8081'
        default: '8081'
    description: Development server
security:
  - jwt: []
tags:
  - name: "Users"
    description: "Operations related to users"
  - name: "Posts"
    description: "Operations related to posts"

paths:
  /users/signUp:
    post:
      tags:
        - "Users"
      summary: Create a new user
      description: Create a new user username / email and password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSignUpDTO'
      responses:
        200:
          description: User successfully created
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/UserSignUpDTO'
        400:
          description: Bad request
          content:
            application/json:
              example:
                error: "Bad Request"
                message: "Invalid input data"
        500:
          description: Internal Server Error
          content:
            application/json:
              example:
                error: "Internal Server Error"
                message: "An unexpected error occurred"
  /users/userLogin: # New login endpoint
    post:
      tags:
        - "Users"
      summary: User login
      description: Authenticate user based on provided username and password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginDTO'
      responses:
        '200':
          description: User successfully logged in
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/UserLoginResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              example:
                error: "Unauthorized"
                message: "Invalid username or password"
        '500':
          description: Internal Server Error
          content:
            application/json:
              example:
                error: "Internal Server Error"
                message: "An unexpected error occurred"
  /users/getAllUsers:
    get:
      tags:
        - "Users"
      summary: Get all users
      description: Retrieve a list of all users
      responses:
        200:
          description: Successfully retrieve all users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserSignUpDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              example:
                error: "Internal Server Error"
                message: "An unexpected error occured"
  /posts/postContent:
    post:
      tags:
        - "Posts"
      summary: Create a new post
      description: Create new post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostContentDTO'
      responses:
        '200':
          description: Post successfully created
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PostContentDTO'
  /posts/getAllPostsContent:
    get:
      tags:
        - "Posts"
      summary: Retrieve all posts
      description: Retrieve an array of posts inclusive of users that posted
      responses:
        '200':
          description: Successfully retrieve all posts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveAllPostsContent'
        '500':
          description: Internal Server Error
          content:
            application/json:
              example:
                error: "Internal Server Error"
                message: "An unexpected error occurred"
  /posts/getAllPostsRespectiveToUser:
    post:
      tags:
        - "Posts"
      operationId: getPostsByUser
      summary: Retrieve all posts belonging to user
      description : Retrieve an array of posts that the user logged in has posted
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
              required:
                - username
      responses:
        '200':
          description: Successfully retrieve all posts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveAllPostsContent'
        '500':
          description: Internal Server Error
          content:
            application/json:
              example:
                error: "Internal Server Error"
                message: "An unexpected error occurred"
components:
  schemas:
    UserSignUpDTO:
      required:
        - username
        - password
        - role
      properties:
        id:
          type: integer
          format: int64
          example: 1
        username:
          type: string
          example: bobby
        password:
          type: string
          minLength: 6
        role:
          type: string
    UserLoginDTO:
      required:
        - username
        - password
      properties:
        username:
          type: string
          example: bobby
        password:
          type: string
          minLength: 6

    UserLoginResponse:
      type: object
      properties:
        accessToken:
          type: string
          description: "JWT token for authentication"
    PostContentDTO:
      required:
        - questionTitle
        - questionNumber
        - content
      properties:
        id:
          type: integer
          format: int64
        questionTitle:
          type: string
        questionNumber:
          type: integer
        questionUrl:
          type: string
        content:
          type: string
        userId:
          type: string
#          format: int64
#          $ref: '#/components/schemas/UserSignUpDTO'
    RetrieveAllPostsContent:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          questionTitle:
            type: string
            example: "Sample Question"
          questionNumber:
            type: integer
            example: 42
          questionUrl:
            type: string
            example : www.google.com
          content:
            type: string
            example: "This is the content of the post."
#          posts:
#            $ref: '#/components/schemas/PostContentDTO'
          users:
            $ref: '#/components/schemas/UserSignUpDTO'

